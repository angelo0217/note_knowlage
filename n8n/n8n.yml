version: '3.8'

services:
  n8n:
    image: n8n-python
    restart: always
    ports:
      - "5678:5678"
    environment:
      - NODE_FUNCTION_ALLOW_EXTERNAL=*
      - N8N_PYTHON_VENV_PATH=/opt/venv
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - N8N_BASIC_AUTH_ACTIVE=${N8N_BASIC_AUTH_ACTIVE}
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
      - TZ=${TZ}
      - N8N_SECURE_COOKIE=false
      - N8N_FEATURE_FLAG_MCP=true
    volumes:
      - n8n_data:/home/node/.n8n
      - ./scripts:/app/scripts
    depends_on:
      - postgres
    networks: # <--- 新增這裡
      - my_bridge_network # <--- 將服務連接到自定義網路

  postgres:
    image: postgres:16
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks: # <--- 新增這裡
      - my_bridge_network # <--- 將服務連接到自定義網路

  redis:
    image: redis/redis-stack-server:7.4.0-v5
    container_name: n8n_redis
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks: # <--- 新增這裡
      - my_bridge_network # <--- 將服務連接到自定義網路

  ollama:
    image: ollama/ollama:latest
    container_name: n8n_ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped
    networks: # <--- 新增這裡
      - my_bridge_network # <--- 將服務連接到自定義網路

volumes:
  n8n_data:
  postgres_data:
  redis_data:
  ollama_data:
    name: ollama_data

networks: # <--- 新增這個區塊
  my_bridge_network: # <--- 定義您的自定義網路名稱
    driver: bridge # <--- 指定網路驅動為 bridge